import logging
from telegram import Update
from telegram.ext import ConversationHandler, CommandHandler, MessageHandler, filters, CallbackContext

from config import ACCESS_KEYS
from keyboards import get_stop_keyboard, get_main_keyboard
from stats_helpers import send_grouped_stats
from state import state
from groups_csv import load_allowed_groups  # –∏–º–ø–æ—Ä—Ç –Ω–æ–≤–æ–≥–æ –º–æ–¥—É–ª—è

logger = logging.getLogger(__name__)

ACCESS_KEY_STATE = 1
MAX_ACTIVE_USERS = 3
async def start_auth(update: Update, context: CallbackContext) -> int:
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    logger.info("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s (chat_id: %s)", user_id, chat_id)
    await update.message.reply_text(f"""–ü—Ä–∏–≤–µ—Ç! üëã –Ø ‚Äî –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤ –≤ Telegram-–≥—Ä—É–ø–ø–∞—Ö.
–Ø —Å–æ–±–∏—Ä–∞—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ —Ç–æ–º, –∫–æ–≥–¥–∞ –Ω–æ–º–µ—Ä–∞ –Ω–∞—á–∞–ª–∏ –∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏ —Ä–∞–±–æ—Ç—É, —Å—á–∏—Ç–∞—é –≤—Ä–µ–º—è –ø—Ä–æ—Å—Ç–æ—è –∏ —Å–æ–∑–¥–∞—é –æ—Ç—á—ë—Ç—ã.

üìä –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –Ω–æ–º–µ—Ä–æ–≤ –≤ –≥—Ä—É–ø–ø–∞—Ö –∏ —Ç–µ–º–∞—Ö

‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –æ—Ç—á—ë—Ç–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

‚úÖ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—ã

üîπ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:
1Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –í–≤–µ–¥–∏—Ç–µ /start –∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞.

2Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /add_group, –∑–∞—Ç–µ–º –≤–≤–µ–¥–∏—Ç–µ ID –≥—Ä—É–ø–ø—ã –∏ –µ—ë –Ω–∞–∑–≤–∞–Ω–∏–µ.

3Ô∏è‚É£ –£–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–∑ —Å–ø–∏—Å–∫–∞: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /remove_group, –∑–∞—Ç–µ–º –≤–≤–µ–¥–∏—Ç–µ ID –≥—Ä—É–ø–ø—ã.

4Ô∏è‚É£ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /stop.

5Ô∏è‚É£ –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–±–æ—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /relaunch_stat.

6Ô∏è‚É£ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –≥—Ä—É–ø–ø: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /list_groups.

–î–æ–±–∞–≤—å—Ç–µ –º–µ–Ω—è –≤ –Ω—É–∂–Ω—ã–µ –≥—Ä—É–ø–ø—ã –∏ —Å–±–æ—Ä —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –Ω–∞—á–Ω–µ—Ç—Å—èüöÄ
–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã ‚Äì –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å @jeasusy üí¨
    """)
    await update.message.reply_text(f"–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞:")
    return ACCESS_KEY_STATE


async def process_access_key(update: Update, context: CallbackContext) -> int:
    user_id = update.effective_user.id
    chat_id = update.effective_chat.id
    access_key = update.message.text.strip()
    logger.info("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s (chat_id: %s) –≤–≤—ë–ª –∫–ª—é—á '%s'", user_id, chat_id, access_key)

    if access_key in ACCESS_KEYS:
        csv_filename = ACCESS_KEYS[access_key]
        # –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –ø–æ–¥ —ç—Ç–∏–º –∫–ª—é—á–æ–º —É–∂–µ –∑–∞–ª–æ–≥–∏–Ω–µ–Ω–æ 3 –∏–ª–∏ –±–æ–ª–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ—Ç–∫–ª–æ–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å
        if csv_filename not in state.admin_chat_ids:
            state.admin_chat_ids[csv_filename] = set()
        if len(state.admin_chat_ids[csv_filename]) >= MAX_ACTIVE_USERS:
            await update.message.reply_text("–ü—Ä–µ–≤—ã—à–µ–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —ç—Ç–æ–≥–æ –∫–ª—é—á–∞.")
            return ACCESS_KEY_STATE

        context.user_data['csv_filename'] = csv_filename
        context.user_data['access_key'] = access_key  # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á
        logger.info("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –ö–ª—é—á '%s' –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω. –ü—Ä–∏–≤—è–∑–∞–Ω CSV —Ñ–∞–π–ª: %s", access_key, csv_filename)
        state.admin_chat_ids[csv_filename].add(chat_id)

        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã—Ö –≥—Ä—É–ø–ø –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –∫–ª—é—á–∞
        allowed_groups_all = load_allowed_groups()
        user_allowed_groups = allowed_groups_all.get(access_key, {})  # {group_id: group_name}
        context.user_data["allowed_groups"] = user_allowed_groups
        state.allowed_groups[csv_filename] = user_allowed_groups

        # –û–±–Ω–æ–≤–ª—è–µ–º mapping group_to_keys: –¥–ª—è –∫–∞–∂–¥–æ–π –≥—Ä—É–ø–ø—ã –¥–æ–±–∞–≤–ª—è–µ–º csv_filename
        for group_id in user_allowed_groups.keys():
            if group_id not in state.group_to_keys:
                state.group_to_keys[group_id] = set()
            state.group_to_keys[group_id].add(csv_filename)

        state.tracking_active = True
        state.stats.clear()
        state.load_from_csv(csv_filename)

        await send_grouped_stats(context)
        await update.message.reply_text(
            "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞.\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞",
            reply_markup=get_main_keyboard()
        )
        logger.info("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %s (chat_id: %s)", user_id, chat_id)
        return ConversationHandler.END
    else:
        logger.warning("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %s –≤–≤—ë–ª –Ω–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á '%s'", user_id, access_key)
        await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:")
        return ACCESS_KEY_STATE



login_conv_handler = ConversationHandler(
    entry_points=[CommandHandler('start', start_auth)],
    states={
        ACCESS_KEY_STATE: [MessageHandler(filters.TEXT & ~filters.COMMAND, process_access_key)]
    },
    fallbacks=[]
)
